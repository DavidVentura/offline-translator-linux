import { Screen } from "navigation.slint";
import { TranslationScreen } from "translation-screen.slint";
import { NoLanguagesScreen } from "no-languages-screen.slint";
import { SettingsScreen } from "settings-screen.slint";
import { ManageLanguagesScreen } from "manage-languages-screen.slint";
import { Language, DetectedLanguage } from "language.slint";
import { AppTheme } from "theme.slint";

export component AppWindow inherits Window {
    title: "Offline Translator";
    background: AppTheme.background;
    min-width: 600px;
    preferred-width: 600px;
    preferred-height: 800px;
    icon: @image-url("assets/logo.svg");

    out property <bool> has-languages: all-installed-languages.length > 1; // english
    in-out property <Screen> current-screen;
    property <Screen> previous-screen;
    in-out property <bool> disable-auto-detect;
    in property <Language> source-language;
    in property <Language> target-language;
    out property <string> input-text;
    in property <string> output-text;
    in property <DetectedLanguage> detected-language;

    in property <[Language]> all-languages;
    in property <[Language]> all-installed-languages;
    in property <[Language]> not-installed-languages;
    in property <[Language]> installed-from-languages;
    in property <[Language]> installed-to-languages;

    in property <[string]> installed-from-language-names; // hack, combobox should take model
    in property <[string]> installed-to-language-names;

    // events
    callback language-downloaded(string);
    callback download-progress(string, float);
    callback languages-cleared();
    callback set-detected-language-code(string);

    // inputs
    callback swap-languages();
    callback camera-clicked();
    callback process-text(string);
    callback download-language(Language);
    callback delete-language(Language);
    callback set-from(string);
    callback set-to(string);

    if current-screen == Screen.NoLanguages: NoLanguagesScreen {
        width: 100%;
        height: 100%;
        installed-languages: root.all-installed-languages;
        not-installed-languages: root.not-installed-languages;

        settings-clicked => {
            root.current-screen = Screen.Settings;
        }
        download-language(lang) => {
            root.download-language(lang);
        }
        delete-language(lang) => {
            root.delete-language(lang);
        }
        done-clicked => {
            root.current-screen = Screen.Translation;
        }
    }

    if current-screen == Screen.Translation: TranslationScreen {
        width: 100%;
        height: 100%;
        source-language: root.source-language;
        target-language: root.target-language;
        detected-language: root.detected-language;
        input-text <=> root.input-text;
        output-text: root.output-text;
        installed-languages: root.all-installed-languages;
        installed-from-language-names: root.installed-from-language-names;
        installed-to-language-names: root.installed-to-language-names;

        download-language(lang) => {
            root.download-language(lang)
        }
        swap-languages => {
            root.swap-languages();
        }
        settings-clicked => {
            root.current-screen = Screen.Settings;
        }
        camera-clicked => {
            root.camera-clicked();
        }
        text-changed => {
            root.process-text(root.input-text);
        }
        set-from(name) => {
            root.set-from(name);
        }
        set-to(name) => {
            root.set-to(name);
        }
    }

    if current-screen == Screen.Settings: SettingsScreen {
        width: 100%;
        height: 100%;
        disable-auto-detect <=> root.disable-auto-detect;
        back-clicked => {
            root.current-screen = Screen.Translation;
        }
        manage-languages-clicked => {
            root.previous-screen = Screen.Settings;
            root.current-screen = Screen.ManageLanguages;
        }
    }

    if current-screen == Screen.ManageLanguages: ManageLanguagesScreen {
        width: 100%;
        height: 100%;
        installed-languages: root.all-installed-languages;
        not-installed-languages: root.not-installed-languages;

        back-clicked => {
            if root.previous-screen == Screen.Settings {
                root.current-screen = Screen.Settings;
            } else {
                root.current-screen = root.has-languages ? Screen.Translation : Screen.NoLanguages;
            }
        }
        download-language(lang) => {
            root.download-language(lang);
        }
        delete-language(lang) => {
            root.delete-language(lang);
        }
    }
}
